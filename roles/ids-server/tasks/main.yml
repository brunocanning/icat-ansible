---

- name: 'Check ids-server package'
  stat:
    path: /home/{{ payara_user }}/downloads/ids.server-{{ ids_server_version }}-distro.zip
  register: packageResult

- name: 'Download ids-server'
  get_url:
    url: https://repo.icatproject.org/repo/org/icatproject/ids.server/{{ ids_server_version }}/ids.server-{{ ids_server_version }}-distro.zip
    dest: /home/{{ payara_user }}/downloads
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0664
  when: packageResult.stat.exists is defined and packageResult.stat.exists == false

- name: 'Unarchive ids-server if not installed'
  unarchive:
    src: /home/{{ payara_user }}/downloads/ids.server-{{ ids_server_version }}-distro.zip
    dest: /home/{{ payara_user }}/install
    remote_src: true
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
  when: ansible_local.local.instantiations.ids_server is not defined or ansible_local.local.versions.ids_server != ids_server_version

- name: "Find any war files not matching the current version"
  find:
    paths: /home/{{ payara_user }}/install/ids.server/
    use_regex: yes
    patterns: "^.*-(?!{{ ids_server_version }}).*\\.war$"
  register: warFilesResult

- name: "Remove war files not matching the current version"
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ warFilesResult.files }}"

- name: 'Create main data directory'
  file:
    path: /home/{{ payara_user }}/data/main
    state: directory
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0775

- name: 'Create archive data directory'
  file:
    path: /home/{{ payara_user }}/data/archive
    state: directory
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0775

- name: 'Create cache data directory'
  file:
    path: /home/{{ payara_user }}/data/cache
    state: directory
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0775

- name: 'Create a stash directory for assembling configurations'
  file:
    path: /home/{{ payara_user }}/stash
    state: directory
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0775

- name: 'Create a stash directory for ids-server configs'
  file:
    path: /home/{{ payara_user }}/stash/ids-server
    state: directory
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0775

- name: 'Copy over {{ payara_user }} setup.properties'
  template:
    src: roles/payara/templates/setup.properties.j2
    dest: /home/{{ payara_user }}/stash/ids-server/1-part
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0664

- name: 'Copy over ids-server setup.properties'
  copy:
    src: files/setup.properties
    dest: /home/{{ payara_user }}/stash/ids-server/2-part
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0664

- name: 'Configure ids-server setup.properties by concatenation of files in the stash'
  assemble:
    src: /home/{{ payara_user }}/stash/ids-server
    dest: /home/{{ payara_user }}/install/ids.server/setup.properties
    delimiter: '\n'
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0600
  notify:
  - "ids-server-handler"

- name: 'Configure ids-server run.properties'
  template:
    src: templates/run.properties.j2
    dest: /home/{{ payara_user }}/install/ids.server/run.properties
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0664
  notify:
  - "ids-server-handler"

- name: 'Configure ids-server logback.xml'
  copy:
    src: files/logback.xml
    dest: /home/{{ payara_user }}/install/ids.server/logback.xml
    owner: '{{ payara_user }}'
    group: '{{ payara_user }}'
    mode: 0664
  notify:
  - "ids-server-handler"

- name: 'Setup ids-server if not setup'
  import_tasks: tasks/installation.yml
  when: (ansible_local is not defined) or (ansible_local.local is not defined) or (ansible_local.local.instantiations is not defined) or (ansible_local.local.instantiations.ids_server is not defined) or (ansible_local.local.instantiations.ids_server != 'true')
